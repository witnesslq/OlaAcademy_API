<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.kzsrm.model.HomeworkMapper" >
  <resultMap id="BaseResultMap" type="com.kzsrm.model.Homework" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="groupId" property="groupId" jdbcType="INTEGER" />
    <result column="createTime" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, groupId, createTime
  </sql>
  <!-- 利用视图查询学生作业 -->
  <select id="getStudentHomeworkList" resultMap="BaseResultMap" parameterType="map" >
    select
	id, name, userId, userName, avatar, groupId, groupName, createTime
	from user_homework 
	where userId = #{userId,jdbcType=INTEGER}
	<if test="createTime != null">
	and createTime &lt; #{createTime,jdbcType=TIMESTAMP} 
	</if>
	order by createTime desc limit #{pageCount,jdbcType=INTEGER}
  </select>
  
  <select id="getTeacherHomeworkList" resultMap="BaseResultMap" parameterType="map" >
    select
	h.id, h.name, g.createUser as userId, g.id as groupId, g.name as groupName, h.createTime
	from homework h, studygroup g
	where createUser = #{userId,jdbcType=INTEGER} 
	and h.groupId = g.id
	<if test="createTime != null">
	and h.createTime &lt; #{createTime,jdbcType=TIMESTAMP} 
	</if>
	order by h.createTime desc limit #{pageCount,jdbcType=INTEGER}
  </select>
  
  <select id="getById" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from homework
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer" >
    delete from homework
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.kzsrm.model.Homework" >
  		<!-- 插入前获取对象id  -->
		<selectKey order="AFTER" resultType="int" keyProperty="id"  >
			select last_insert_id()
		</selectKey>
    insert into homework (id, name,groupId,createTime)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{groupId,jdbcType=INTEGER}, 
     #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.kzsrm.model.OlaCircle" >
    insert into homework
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="vid != null" >
        vid,
      </if>
      <if test="userid != null" >
        userid,
      </if>
      <if test="timespan != null" >
        timespan,
      </if>
      <if test="createtime != null" >
        createTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="vid != null" >
        #{vid,jdbcType=VARCHAR},
      </if>
      <if test="userid != null" >
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="timespan != null" >
        #{timespan,jdbcType=INTEGER},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.kzsrm.model.OlaCircle" >
    update olacircle
    <set >
      <if test="videoId != null" >
        vid = #{videoId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        userid = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        courseId = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateById" parameterType="com.kzsrm.model.OlaCircle" >
    update olacircle
    <set >
      <if test="praiseNumber != null" >
        praiseNumber = #{praiseNumber,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>